"mongodb+srv://misirlimert1:<password>@cluster0.1ywerye.mongodb.net/?retryWrites=true&w=majority"


<script setup>
</script>

<template>
    <link rel="stylesheet" href="../assets/main.css">

    <Navbar :userInfo="userName" />
    <main>
        <div id="username-page" :class="defclass">
            <div class="username-page-container">
                <h1 class="title">Welcome To Chatroom {{ userName.displayName }}</h1>
                <form id="usernameForm" class="mt-5" name="usernameForm" @submit.prevent="connect">
                    <div class="form-group">
                        <input type="text" id="name" v-model="chatProfileName" placeholder="Username" autocomplete="off"
                            class="form-control" />
                    </div>
                    <div class="form-group">
                        <button type="submit" class="accent username-submit">Start Chatting</button>
                    </div>
                </form>
            </div>
        </div>

        <div id="chat-page" :class="chatclass">
            <div class="">
                <div class="row">
                    <!-- User List Part LEFT-->
                    <div class="col-3" id="user-list-part">
                        <h4>Person</h4>
                        <div class="row" style="">
 
                        </div>
                        <ul class="chat-history" style="">
                            <li class="col d-flex" v-for="(row, index) in this.chatHistory" key="index"
                                @click="selectItem(index)" style="margin-bottom: 3px; height: 85px; padding: 0;">
                                <div class="row w-100" style="padding: 0;"
                                    :class="{ 'active': index == this.selectedUserIndex }">
                                    <div class="my-auto mx-3 bg-primary d-flex justify-content-center align-items-center"
                                        style="border-radius: 50%; height: 45px; width: 45px;">
                                        <p class="mt-1" style="font-size: 25px; font-style: bold;">PP</p>
                                    </div>
                                    <div class="col d-lg-block d-none mx-3" style="height: 85px; margin-top: 10px;">
                                        <div class="text-light">{{ index }}</div>
                                        <div class="text-light">{{ row }}</div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>

                    <!-- Chat Messages Part RIGHT -->
                    <div class="col-9" id="message-part" style="height: 100vh;">
                        <div class="chat-container">
                            <div class="chat-header">
                                <h2 v-if="selectedUserIndex == null">Spring WebSocket Chat Demo</h2>
                                <h2 v-else>{{ this.chatHistory[this.selectedUserIndex] }}</h2>
                            </div>
                            <div :class="connectingClass" v-if="!isError" style="background-color: orange;">
                                Connecting...
                            </div>
                            <div :class="connectingClass" v-else="isError">
                                Could not Connect To Websocket.
                            </div>
                            <ul id="messageArea">
                                <li v-for="(row, index) in messageList" :key="index"
                                    style="margin-top: 10px; padding-top: 5px; height: 55px; color: white;">
                                    <span class="rounded-2"
                                        style="max-width: 80; cursor: default; background-color: rgb(46, 44, 44);">
                                        {{ row }}</span>
                                </li>
                            </ul>
                            <form id="messageForm" name="messageForm" @submit.prevent="sendMessage">
                                <div class="form-group">
                                    <div class="input-group clearfix bg-warning">
                                        <input v-model="messageInput" type="text" id="message"
                                            placeholder="Type a message..." autocomplete="off"
                                            class="form-control rounded-2 mx-auto" />
                                        <button type="submit" class="primary">Send</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                </div>

                <ul class="li">Deneme</ul>
                <ul class="li">Deneme</ul>
                <ul class="li">ertert</ul>
                <ul class="li">erkoerkt</ul>
                <ul class="li">wrtpelrpt</ul>

            </div>

        </div>
    </main>
</template>

<script>
import Navbar from '../components/NavBar.vue'


export default {
    components: {
        Navbar,
    },
    data() {
        return {
            stompClient: null,
            userName: '',
            colors: [
                '#2196F3', '#32c787', '#00BCD4', '#ff5652',
                '#ffc107', '#ff85af', '#FF9800', '#39bbb0'
            ],
            defclass: '',
            chatclass: 'hidden',
            // defclass: 'hidden',
            // chatclass: '',
            connectingClass: '',
            isError: false,
            messageInput: '',
            messageList: [],
            chatProfileName: '',
            chatHistory: ["Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", , "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", , "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", , "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli", "Ahmet", "Mehmet", "Sancak", "Tepeli"],
            selectedUserIndex: null
        }
    },

    methods: {
        connect() {
            this.defclass = "hidden";
            this.chatclass = '';

            // var socket = new SockJS('/ws');
            const socket = new SockJS('//localhost:8095/ws'); // Buraya backend'in adresini ve portunu girin
            this.stompClient = Stomp.over(socket);

            this.stompClient.connect({}, this.onConnect, this.onError)
        },
        onConnect() {
            this.stompClient.subscribe('/topic/public', this.onMessageReceived);

            this.stompClient.send('/app/chat.addUser', {}, JSON.stringify({
                sender: this.username,
                type: 'JOIN'
            }));
            this.connectingClass = 'hidden';
        },
        onMessageReceived(payload) {
            var message = JSON.parse(payload.body);

            if (message.type === 'JOIN') {
                this.messageList.push((message.sender + ' joined.'));
            } else if (message.type === 'LEAVE') {
                this.messageList.push((message.sender + ' left.'));
            } else {

                this.messageList.push(message.message);
            }
        },
        onError() {
            this.isError = true;
        },
        sendMessage() {
            var messageContent = this.messageInput;

            if (messageContent && this.stompClient) {
                var chatMessage = {
                    'sender': this.chatProfileName,
                    'receiver': this.chatHistory[this.selectedUserIndex],
                    'message': messageContent,
                    'type': 'CHAT',
                };
                this.stompClient.send(
                    '/app/chat.sendMessage',
                    {},
                    JSON.stringify(chatMessage)
                );
                this.messageInput = '';
            }
        },
        disconnectWebSocket() {
            if (this.stompClient) {
                this.stompClient.disconnect();
                // Websocket bağlantısı kapatıldığında yapılacak işlemler.
            }
        },
        // Change Active Message Receiver
        selectItem(index) {
            console.log("Selected item : " + index);
            this.selectedUserIndex = index;


        }

    },
    mounted() {
        const data = this.$route.meta.data;
        this.userName = data['userInfo'];
        this.chatProfileName = this.userName.displayName

    },
}

</script>


<script setup>

</script>

<style>
* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.horizontal-grid {
    display: grid;
    grid-auto-flow: column;
    gap: 10px;
    /* İstenilen boşluk miktarını belirleyebilirsiniz */
    list-style: none;
    list-style-type: none;
    padding: 0;
}

.active {
    background-color: #8b8b89;
}


html,
body {
    height: 100%;
    overflow: hidden;
}

body {
    margin: 0;
    padding: 0;
    font-weight: 400;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 1rem;
    line-height: 1.58;
    color: #333;
    background-color: #f4f4f4;
    height: 100%;
}

.clearfix:after {
    display: block;
    content: "";
    clear: both;
}

.hidden {
    display: none;
}

.form-control {
    width: 100%;
    min-height: 38px;
    font-size: 15px;
    border: 1px solid #c8c8c8;
}

.form-group {
    margin-bottom: 5px;
}

input {
    padding-left: 10px;
    outline: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-top: 20px;
    margin-bottom: 20px;
}

h1 {
    font-size: 1.7em;
}

a {
    color: #6db33f;
}

button {
    box-shadow: none;
    border: 1px solid transparent;
    font-size: 14px;
    outline: none;
    line-height: 100%;
    white-space: nowrap;
    vertical-align: middle;
    padding: 0.6rem 1rem;
    border-radius: 2px;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    min-height: 38px;
}

button.default {
    background-color: #e8e8e8;
    color: #333;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.12);
}

button.primary {
    background-color: #6db33f;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.12);
    color: #fff;
}

button.accent {
    background-color: #6db33f;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.12);
    color: #fff;
}

#username-page {
    text-align: center;
}

.username-page-container {
    background: #fff;
    box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);
    border-radius: 2px;
    width: 100%;
    max-width: 700px;
    display: inline-block;
    margin-top: 42px;
    vertical-align: middle;
    position: relative;
    padding: 35px 55px 35px;
    min-height: 250px;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    margin: 0 auto;
    margin-top: -160px;
}

.username-page-container .username-submit {
    margin-top: 10px;
}


#chat-page {
    position: relative;
    height: 100%;
}

.chat-container {
    margin-left: auto;
    margin-right: 20px;
    background-color: #efeeee;
    box-shadow: 0 1px 11px rgba(0, 0, 0, 0.27);
    margin-top: 10px;
    height: calc(100% - 60px);
    max-height: 680px;
    position: relative;
}

.chat-history li {
    background-color: #313131;
    padding-bottom: 25px;
}

.chat-history li:hover {
    background-color: rgb(73, 71, 75);
}

#chat-page ul {
    list-style-type: none;
    background-color: #d1cfcf;
    margin: 0;
    overflow: auto;
    overflow-y: scroll;
    padding: 0 0px 0px 0px;
    height: calc(100% - 150px);
}

#user-list-part ul {
    list-style-type: none;
    background-color: #d1cfcf;
    margin: 0;
    overflow: auto;
    overflow-y: scroll;
    padding: 0 0px 0px 0px;
    max-height: 650px;
}

#chat-page #messageForm {
    padding: 20px;
}

#chat-page ul li {
    line-height: 1.5rem;
    padding: 0px 0px;
    margin: 0;
    border-bottom: 1px solid #f4f4f4;
}

#chat-page ul li p {
    margin: 0;
}

#chat-page .event-message {
    width: 100%;
    text-align: center;
    clear: both;
}

#chat-page .event-message p {
    color: #777;
    font-size: 14px;
    word-wrap: break-word;
}

#chat-page .chat-message {
    padding-left: 68px;
    position: relative;
}

#chat-page .chat-message i {
    position: absolute;
    width: 42px;
    height: 42px;
    overflow: hidden;
    left: 10px;
    display: inline-block;
    vertical-align: middle;
    font-size: 18px;
    line-height: 42px;
    color: #fff;
    text-align: center;
    border-radius: 50%;
    font-style: normal;
    text-transform: uppercase;
}

#chat-page .chat-message span {
    color: #333;
    font-weight: 600;
}

#chat-page .chat-message p {
    color: #43464b;
}

#messageForm .input-group input {
    float: left;
    width: calc(100% - 85px);
}

#messageForm .input-group button {
    float: left;
    width: 80px;
    height: 38px;
}

.chat-header {
    text-align: center;
    padding: 15px;
    border-bottom: 1px solid #ececec;
}

.chat-header h2 {
    margin: 0;
    font-weight: 500;
}

.connecting {
    padding-top: 5px;
    text-align: center;
    color: #777;
    position: absolute;
    top: 65px;
    width: 100%;
}


@media screen and (max-width: 730px) {

    .chat-container {
        margin-left: 10px;
        margin-right: 10px;
        margin-top: 10px;
    }
}

@media screen and (max-width: 480px) {
    .chat-container {
        height: calc(100% - 30px);
    }

    .username-page-container {
        width: auto;
        margin-left: 15px;
        margin-right: 15px;
        padding: 25px;
    }

    #chat-page ul {
        height: calc(100% - 120px);
    }

    #messageForm .input-group button {
        width: 65px;
    }

    #messageForm .input-group input {
        width: calc(100% - 70px);
    }

    .chat-header {
        padding: 10px;
    }

    .connecting {
        top: 60px;
    }

    .chat-header h2 {
        font-size: 1.1em;
    }

    .chat-history {
        background-color: grey;
    }


}</style>
